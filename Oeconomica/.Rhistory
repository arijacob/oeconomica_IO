library(tidyverse)
library(ggplot2)
library(ggthemes)
library(zoo)
df <- read.csv('https://raw.githubusercontent.com/arijacob/oeconomica_IO/main/Oeconomica/Master-data.csv')
df = df %>%
mutate(date = as.Date(date))
season_func <- function(month) {
season <- ifelse(month %in% c(12, 1, 2), "winter",
ifelse(month %in% c(3, 4, 5), "spring",
ifelse(month %in% c(6, 7, 8), "summer", "fall")))
return(season)
}
df = df %>%
mutate(year = year(date), month = month(date)) %>%
mutate(season = season_func(month)) %>%
select(-month)
reg = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(eggs_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season), data = df)
df_zero = df %>%
mutate(conduct_period = 0)
df = df %>%
mutate(predicted = predict(reg2, newdata = df),
predicted_zero =  predict(reg, newdata = df_zero))
df = df %>%
mutate(predicted = predict(reg, newdata = df),
predicted_zero =  predict(reg, newdata = df_zero))
#Comparing actual sales to average with rolling mean
ggplot(data = df, aes(x = date)) +
geom_line(aes(y = rollmean(log(dominant_sales), k=20, align='right',  fill = NA), color = "Actual Sales")) +  # actual sales logged
geom_line(aes(y = rollmean(predicted_zero, k=20, align='right',  fill = NA), color = "Predicted Sales assuming no misconduct")) + # Regression line with 'conduct_period' set to zero
scale_color_manual(values = c(
'Actual Sales' = 'darkgreen',
'Predicted Sales assuming no misconduct' = 'purple')) +
labs(y = "Sales (logged)", color = 'Legend') +
theme_excel_new()
reg = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(eggs_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season), data = df)
summary(reg2)
summary(reg)
reg2 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(eggs_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_2_wage), data = df)
summary(reg2)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(zoo)
df <- read.csv('https://raw.githubusercontent.com/arijacob/oeconomica_IO/main/Oeconomica/Master-data.csv')
df = df %>%
mutate(date = as.Date(date))
season_func <- function(month) {
season <- ifelse(month %in% c(12, 1, 2), "winter",
ifelse(month %in% c(3, 4, 5), "spring",
ifelse(month %in% c(6, 7, 8), "summer", "fall")))
return(season)
}
df = df %>%
mutate(year = year(date), month = month(date)) %>%
mutate(season = season_func(month)) %>%
select(-month)
reg = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(eggs_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season), data = df)
#Comparing actual sales to average with rolling mean
ggplot(data = df, aes(x = date)) +
geom_line(aes(y = rollmean(log(dominant_sales), k=20, align='right',  fill = NA), color = "Actual Sales")) +  # actual sales logged
geom_line(aes(y = rollmean(predicted_zero, k=20, align='right',  fill = NA), color = "Predicted Sales assuming no misconduct")) + # Regression line with 'conduct_period' set to zero
scale_color_manual(values = c(
'Actual Sales' = 'darkgreen',
'Predicted Sales assuming no misconduct' = 'purple')) +
labs(y = "Sales (logged)", color = 'Legend') +
theme_excel_new()
df_zero = df %>%
mutate(conduct_period = 0)
df = df %>%
mutate(predicted = predict(reg, newdata = df),
predicted_zero =  predict(reg, newdata = df_zero))
#Comparing actual sales to average with rolling mean
ggplot(data = df, aes(x = date)) +
geom_line(aes(y = rollmean(log(dominant_sales), k=20, align='right',  fill = NA), color = "Actual Sales")) +  # actual sales logged
geom_line(aes(y = rollmean(predicted_zero, k=20, align='right',  fill = NA), color = "Predicted Sales assuming no misconduct")) + # Regression line with 'conduct_period' set to zero
scale_color_manual(values = c(
'Actual Sales' = 'darkgreen',
'Predicted Sales assuming no misconduct' = 'purple')) +
labs(y = "Sales (logged)", color = 'Legend') +
theme_excel_new()
reg = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(eggs_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season), data = df)
#calculation of damages
df = df %>%
mutate(difference = predicted - dominant_sales)
View(df)
df = df %>%
mutate(predicted = predict(reg2, newdata = df),
predicted_zero =  predict(reg2, newdata = df_zero))
reg2 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(eggs_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_2_wage), data = df)
df_zero = df %>%
mutate(conduct_period = 0)
df = df %>%
mutate(predicted = predict(reg2, newdata = df),
predicted_zero =  predict(reg2, newdata = df_zero))
#Comparing actual sales to average with rolling mean
ggplot(data = df, aes(x = date)) +
geom_line(aes(y = rollmean(log(dominant_sales), k=20, align='right',  fill = NA), color = "Actual Sales")) +  # actual sales logged
geom_line(aes(y = rollmean(predicted_zero, k=20, align='right',  fill = NA), color = "Predicted Sales assuming no misconduct")) + # Regression line with 'conduct_period' set to zero
scale_color_manual(values = c(
'Actual Sales' = 'darkgreen',
'Predicted Sales assuming no misconduct' = 'purple')) +
labs(y = "Sales (logged)", color = 'Legend') +
theme_excel_new()
install.packages(stargazer)
install.packages("stargazer")
library(stargazer)
#regression output
stargazer(Lm_1, type='text', digits = 2, title = 'Regression Results', style = 'qje', out = 'Lm_1.doc')
#regression output
stargazer(reg2, type='text', digits = 2, title = 'Regression Results', style = 'qje', out = 'Lm_1.doc')
#regression output
stargazer(reg2, type='text', digits = 2, title = 'Regression Results', style = 'qje', out = 'Lm_1.doc')
reg2 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + #log(eggs_price)
+ log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_5_wage), data = df)
summary(reg2)
reg2 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_5_wage), data = df)
summary(reg2)
reg3 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_5_wage), data = df)
summary(reg3)
reg3 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_5_wage), data = df)
summary(reg3)
df <- read.csv('https://raw.githubusercontent.com/arijacob/oeconomica_IO/main/Oeconomica/Master-data.csv')
df = df %>%
mutate(date = as.Date(date))
season_func <- function(month) {
season <- ifelse(month %in% c(12, 1, 2), "winter",
ifelse(month %in% c(3, 4, 5), "spring",
ifelse(month %in% c(6, 7, 8), "summer", "fall")))
return(season)
}
df = df %>%
mutate(year = year(date), month = month(date)) %>%
mutate(season = season_func(month)) %>%
select(-month)
reg3 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) +
log(sugar_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_5_wage), data = df)
summary(reg3)
reg2 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) + log(eggs_price) +
log(sugar_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_5_wage), data = df)
#regression table
reg_table <- stargazer(reg2, type='text', digits = 2, title = 'Regression Table', style = 'qje', out = 'reg_2.doc')
doc <- read_docx()
install.packages(officer)
install.packages("officer")
library(officer)
reg2 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) + log(eggs_price) +
log(sugar_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_5_wage), data = df)
#regression table
reg_table <- stargazer(reg2, type='text', digits = 2, title = 'Regression Table', style = 'qje', out = 'reg_2.doc')
doc <- read_docx()
doc <- doc %>%
body_add(reg_table)
print(doc, target = 'reg_2.docx')
#regression table
reg_table <- stargazer(reg2, type='text', digits = 2, title = 'Regression Table', style = 'qje', out = 'filename.doc/html/latex')
reg2 = lm(log(dominant_sales) ~ conduct_period +
factor(state) + log(temp) + log(milk_price) + log(eggs_price) +
log(sugar_price) + log(diesel_price) +
log(dominant_wage) + log(waffle_cone_price) + log(cpi_less_food_and_energy) +
log(unemployment_rate) + factor(year) + factor(season) + log(defendant_6_wage) + log(defendant_4_wage) + log(defendant_5_wage), data = df)
summary(reg2)
#regression table
stargazer(reg2)
